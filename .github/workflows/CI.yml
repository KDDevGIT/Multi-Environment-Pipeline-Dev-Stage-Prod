name: CI (fmt/validate/plan)


on:
pull_request:
branches: [dev, stage, prod]
workflow_dispatch:


permissions:
id-token: write
contents: read


jobs:
terraform-ci:
runs-on: ubuntu-latest
strategy:
matrix:
environment: [dev, stage, prod]
steps:
- name: Checkout
uses: actions/checkout@v4


- name: Set up Terraform
uses: hashicorp/setup-terraform@v3
with:
terraform_version: 1.7.5


- name: Terraform fmt
run: terraform -chdir=terraform fmt -check -recursive


- name: Terraform init (no backend on fork PRs)
if: github.event.pull_request.head.repo.fork == true
run: terraform -chdir=terraform init -backend=false


- name: Configure AWS credentials (OIDC)
if: github.event.pull_request.head.repo.fork == false
uses: aws-actions/configure-aws-credentials@v4
with:
aws-region: us-west-2
role-to-assume: ${{ secrets[format('AWS_ROLE_ARN_{0}', upper(matrix.environment))] }}


- name: Terraform init (with backend)
if: github.event.pull_request.head.repo.fork == false
run: |
terraform -chdir=terraform init \
-backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
-backend-config="key=${{ matrix.environment }}/terraform.tfstate" \
-backend-config="region=${{ vars.AWS_REGION || 'us-west-2' }}" \
-backend-config="dynamodb_table=${{ secrets.TF_LOCK_TABLE }}"


- name: Terraform validate
-var-file=../envs/${{ matrix.environment }}.tfvars